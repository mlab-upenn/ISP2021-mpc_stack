#mpcc : A fast customized optimization solver.
#
#Copyright (C) 2013-2021 EMBOTECH AG [info@embotech.com]. All rights reserved.
#
#
#This software is intended for simulation and testing purposes only. 
#Use of this software for any commercial purpose is prohibited.
#
#This program is distributed in the hope that it will be useful.
#EMBOTECH makes NO WARRANTIES with respect to the use of the software 
#without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
#PARTICULAR PURPOSE. 
#
#EMBOTECH shall not have any liability for any damage arising from the use
#of the software.
#
#This Agreement shall exclusively be governed by and interpreted in 
#accordance with the laws of Switzerland, excluding its principles
#of conflict of laws. The Courts of Zurich-City shall have exclusive 
#jurisdiction in case of any dispute.
#
#def __init__():
'''
a Python wrapper for a fast solver generated by FORCESPRO v4.2.0

   OUTPUT = mpcc_py.mpcc_solve(PARAMS) solves a multistage problem
   subject to the parameters supplied in the following dictionary:
       PARAMS['H01'] - matrix of size [14 x 14]
       PARAMS['H02'] - matrix of size [14 x 14]
       PARAMS['H03'] - matrix of size [14 x 14]
       PARAMS['H04'] - matrix of size [14 x 14]
       PARAMS['H05'] - matrix of size [14 x 14]
       PARAMS['H06'] - matrix of size [14 x 14]
       PARAMS['H07'] - matrix of size [14 x 14]
       PARAMS['H08'] - matrix of size [14 x 14]
       PARAMS['H09'] - matrix of size [14 x 14]
       PARAMS['H10'] - matrix of size [14 x 14]
       PARAMS['H11'] - matrix of size [14 x 14]
       PARAMS['H12'] - matrix of size [14 x 14]
       PARAMS['H13'] - matrix of size [14 x 14]
       PARAMS['H14'] - matrix of size [14 x 14]
       PARAMS['H15'] - matrix of size [14 x 14]
       PARAMS['H16'] - matrix of size [14 x 14]
       PARAMS['H17'] - matrix of size [14 x 14]
       PARAMS['H18'] - matrix of size [14 x 14]
       PARAMS['H19'] - matrix of size [14 x 14]
       PARAMS['H20'] - matrix of size [14 x 14]
       PARAMS['H21'] - matrix of size [14 x 14]
       PARAMS['H22'] - matrix of size [14 x 14]
       PARAMS['H23'] - matrix of size [14 x 14]
       PARAMS['H24'] - matrix of size [14 x 14]
       PARAMS['H25'] - matrix of size [14 x 14]
       PARAMS['H26'] - matrix of size [14 x 14]
       PARAMS['H27'] - matrix of size [14 x 14]
       PARAMS['H28'] - matrix of size [14 x 14]
       PARAMS['H29'] - matrix of size [14 x 14]
       PARAMS['H30'] - matrix of size [14 x 14]
       PARAMS['H31'] - matrix of size [14 x 14]
       PARAMS['H32'] - matrix of size [14 x 14]
       PARAMS['H33'] - matrix of size [14 x 14]
       PARAMS['H34'] - matrix of size [14 x 14]
       PARAMS['H35'] - matrix of size [14 x 14]
       PARAMS['H36'] - matrix of size [14 x 14]
       PARAMS['H37'] - matrix of size [14 x 14]
       PARAMS['H38'] - matrix of size [14 x 14]
       PARAMS['H39'] - matrix of size [14 x 14]
       PARAMS['H40'] - matrix of size [14 x 14]
       PARAMS['H41'] - matrix of size [14 x 14]
       PARAMS['H42'] - matrix of size [14 x 14]
       PARAMS['H43'] - matrix of size [14 x 14]
       PARAMS['H44'] - matrix of size [14 x 14]
       PARAMS['H45'] - matrix of size [14 x 14]
       PARAMS['H46'] - matrix of size [14 x 14]
       PARAMS['H47'] - matrix of size [14 x 14]
       PARAMS['H48'] - matrix of size [14 x 14]
       PARAMS['H49'] - matrix of size [14 x 14]
       PARAMS['H50'] - matrix of size [14 x 14]
       PARAMS['f01'] - column vector of length 14
       PARAMS['f02'] - column vector of length 14
       PARAMS['f03'] - column vector of length 14
       PARAMS['f04'] - column vector of length 14
       PARAMS['f05'] - column vector of length 14
       PARAMS['f06'] - column vector of length 14
       PARAMS['f07'] - column vector of length 14
       PARAMS['f08'] - column vector of length 14
       PARAMS['f09'] - column vector of length 14
       PARAMS['f10'] - column vector of length 14
       PARAMS['f11'] - column vector of length 14
       PARAMS['f12'] - column vector of length 14
       PARAMS['f13'] - column vector of length 14
       PARAMS['f14'] - column vector of length 14
       PARAMS['f15'] - column vector of length 14
       PARAMS['f16'] - column vector of length 14
       PARAMS['f17'] - column vector of length 14
       PARAMS['f18'] - column vector of length 14
       PARAMS['f19'] - column vector of length 14
       PARAMS['f20'] - column vector of length 14
       PARAMS['f21'] - column vector of length 14
       PARAMS['f22'] - column vector of length 14
       PARAMS['f23'] - column vector of length 14
       PARAMS['f24'] - column vector of length 14
       PARAMS['f25'] - column vector of length 14
       PARAMS['f26'] - column vector of length 14
       PARAMS['f27'] - column vector of length 14
       PARAMS['f28'] - column vector of length 14
       PARAMS['f29'] - column vector of length 14
       PARAMS['f30'] - column vector of length 14
       PARAMS['f31'] - column vector of length 14
       PARAMS['f32'] - column vector of length 14
       PARAMS['f33'] - column vector of length 14
       PARAMS['f34'] - column vector of length 14
       PARAMS['f35'] - column vector of length 14
       PARAMS['f36'] - column vector of length 14
       PARAMS['f37'] - column vector of length 14
       PARAMS['f38'] - column vector of length 14
       PARAMS['f39'] - column vector of length 14
       PARAMS['f40'] - column vector of length 14
       PARAMS['f41'] - column vector of length 14
       PARAMS['f42'] - column vector of length 14
       PARAMS['f43'] - column vector of length 14
       PARAMS['f44'] - column vector of length 14
       PARAMS['f45'] - column vector of length 14
       PARAMS['f46'] - column vector of length 14
       PARAMS['f47'] - column vector of length 14
       PARAMS['f48'] - column vector of length 14
       PARAMS['f49'] - column vector of length 14
       PARAMS['f50'] - column vector of length 14
       PARAMS['A01'] - matrix of size [2 x 14]
       PARAMS['A02'] - matrix of size [2 x 14]
       PARAMS['A03'] - matrix of size [2 x 14]
       PARAMS['A04'] - matrix of size [2 x 14]
       PARAMS['A05'] - matrix of size [2 x 14]
       PARAMS['A06'] - matrix of size [2 x 14]
       PARAMS['A07'] - matrix of size [2 x 14]
       PARAMS['A08'] - matrix of size [2 x 14]
       PARAMS['A09'] - matrix of size [2 x 14]
       PARAMS['A10'] - matrix of size [2 x 14]
       PARAMS['A11'] - matrix of size [2 x 14]
       PARAMS['A12'] - matrix of size [2 x 14]
       PARAMS['A13'] - matrix of size [2 x 14]
       PARAMS['A14'] - matrix of size [2 x 14]
       PARAMS['A15'] - matrix of size [2 x 14]
       PARAMS['A16'] - matrix of size [2 x 14]
       PARAMS['A17'] - matrix of size [2 x 14]
       PARAMS['A18'] - matrix of size [2 x 14]
       PARAMS['A19'] - matrix of size [2 x 14]
       PARAMS['A20'] - matrix of size [2 x 14]
       PARAMS['A21'] - matrix of size [2 x 14]
       PARAMS['A22'] - matrix of size [2 x 14]
       PARAMS['A23'] - matrix of size [2 x 14]
       PARAMS['A24'] - matrix of size [2 x 14]
       PARAMS['A25'] - matrix of size [2 x 14]
       PARAMS['A26'] - matrix of size [2 x 14]
       PARAMS['A27'] - matrix of size [2 x 14]
       PARAMS['A28'] - matrix of size [2 x 14]
       PARAMS['A29'] - matrix of size [2 x 14]
       PARAMS['A30'] - matrix of size [2 x 14]
       PARAMS['A31'] - matrix of size [2 x 14]
       PARAMS['A32'] - matrix of size [2 x 14]
       PARAMS['A33'] - matrix of size [2 x 14]
       PARAMS['A34'] - matrix of size [2 x 14]
       PARAMS['A35'] - matrix of size [2 x 14]
       PARAMS['A36'] - matrix of size [2 x 14]
       PARAMS['A37'] - matrix of size [2 x 14]
       PARAMS['A38'] - matrix of size [2 x 14]
       PARAMS['A39'] - matrix of size [2 x 14]
       PARAMS['A40'] - matrix of size [2 x 14]
       PARAMS['A41'] - matrix of size [2 x 14]
       PARAMS['A42'] - matrix of size [2 x 14]
       PARAMS['A43'] - matrix of size [2 x 14]
       PARAMS['A44'] - matrix of size [2 x 14]
       PARAMS['A45'] - matrix of size [2 x 14]
       PARAMS['A46'] - matrix of size [2 x 14]
       PARAMS['A47'] - matrix of size [2 x 14]
       PARAMS['A48'] - matrix of size [2 x 14]
       PARAMS['A49'] - matrix of size [2 x 14]
       PARAMS['A50'] - matrix of size [2 x 14]
       PARAMS['b01'] - column vector of length 2
       PARAMS['b02'] - column vector of length 2
       PARAMS['b03'] - column vector of length 2
       PARAMS['b04'] - column vector of length 2
       PARAMS['b05'] - column vector of length 2
       PARAMS['b06'] - column vector of length 2
       PARAMS['b07'] - column vector of length 2
       PARAMS['b08'] - column vector of length 2
       PARAMS['b09'] - column vector of length 2
       PARAMS['b10'] - column vector of length 2
       PARAMS['b11'] - column vector of length 2
       PARAMS['b12'] - column vector of length 2
       PARAMS['b13'] - column vector of length 2
       PARAMS['b14'] - column vector of length 2
       PARAMS['b15'] - column vector of length 2
       PARAMS['b16'] - column vector of length 2
       PARAMS['b17'] - column vector of length 2
       PARAMS['b18'] - column vector of length 2
       PARAMS['b19'] - column vector of length 2
       PARAMS['b20'] - column vector of length 2
       PARAMS['b21'] - column vector of length 2
       PARAMS['b22'] - column vector of length 2
       PARAMS['b23'] - column vector of length 2
       PARAMS['b24'] - column vector of length 2
       PARAMS['b25'] - column vector of length 2
       PARAMS['b26'] - column vector of length 2
       PARAMS['b27'] - column vector of length 2
       PARAMS['b28'] - column vector of length 2
       PARAMS['b29'] - column vector of length 2
       PARAMS['b30'] - column vector of length 2
       PARAMS['b31'] - column vector of length 2
       PARAMS['b32'] - column vector of length 2
       PARAMS['b33'] - column vector of length 2
       PARAMS['b34'] - column vector of length 2
       PARAMS['b35'] - column vector of length 2
       PARAMS['b36'] - column vector of length 2
       PARAMS['b37'] - column vector of length 2
       PARAMS['b38'] - column vector of length 2
       PARAMS['b39'] - column vector of length 2
       PARAMS['b40'] - column vector of length 2
       PARAMS['b41'] - column vector of length 2
       PARAMS['b42'] - column vector of length 2
       PARAMS['b43'] - column vector of length 2
       PARAMS['b44'] - column vector of length 2
       PARAMS['b45'] - column vector of length 2
       PARAMS['b46'] - column vector of length 2
       PARAMS['b47'] - column vector of length 2
       PARAMS['b48'] - column vector of length 2
       PARAMS['b49'] - column vector of length 2
       PARAMS['b50'] - column vector of length 2
       PARAMS['C01'] - matrix of size [11 x 14]
       PARAMS['C02'] - matrix of size [11 x 14]
       PARAMS['C03'] - matrix of size [11 x 14]
       PARAMS['C04'] - matrix of size [11 x 14]
       PARAMS['C05'] - matrix of size [11 x 14]
       PARAMS['C06'] - matrix of size [11 x 14]
       PARAMS['C07'] - matrix of size [11 x 14]
       PARAMS['C08'] - matrix of size [11 x 14]
       PARAMS['C09'] - matrix of size [11 x 14]
       PARAMS['C10'] - matrix of size [11 x 14]
       PARAMS['C11'] - matrix of size [11 x 14]
       PARAMS['C12'] - matrix of size [11 x 14]
       PARAMS['C13'] - matrix of size [11 x 14]
       PARAMS['C14'] - matrix of size [11 x 14]
       PARAMS['C15'] - matrix of size [11 x 14]
       PARAMS['C16'] - matrix of size [11 x 14]
       PARAMS['C17'] - matrix of size [11 x 14]
       PARAMS['C18'] - matrix of size [11 x 14]
       PARAMS['C19'] - matrix of size [11 x 14]
       PARAMS['C20'] - matrix of size [11 x 14]
       PARAMS['C21'] - matrix of size [11 x 14]
       PARAMS['C22'] - matrix of size [11 x 14]
       PARAMS['C23'] - matrix of size [11 x 14]
       PARAMS['C24'] - matrix of size [11 x 14]
       PARAMS['C25'] - matrix of size [11 x 14]
       PARAMS['C26'] - matrix of size [11 x 14]
       PARAMS['C27'] - matrix of size [11 x 14]
       PARAMS['C28'] - matrix of size [11 x 14]
       PARAMS['C29'] - matrix of size [11 x 14]
       PARAMS['C30'] - matrix of size [11 x 14]
       PARAMS['C31'] - matrix of size [11 x 14]
       PARAMS['C32'] - matrix of size [11 x 14]
       PARAMS['C33'] - matrix of size [11 x 14]
       PARAMS['C34'] - matrix of size [11 x 14]
       PARAMS['C35'] - matrix of size [11 x 14]
       PARAMS['C36'] - matrix of size [11 x 14]
       PARAMS['C37'] - matrix of size [11 x 14]
       PARAMS['C38'] - matrix of size [11 x 14]
       PARAMS['C39'] - matrix of size [11 x 14]
       PARAMS['C40'] - matrix of size [11 x 14]
       PARAMS['C41'] - matrix of size [11 x 14]
       PARAMS['C42'] - matrix of size [11 x 14]
       PARAMS['C43'] - matrix of size [11 x 14]
       PARAMS['C44'] - matrix of size [11 x 14]
       PARAMS['C45'] - matrix of size [11 x 14]
       PARAMS['C46'] - matrix of size [11 x 14]
       PARAMS['C47'] - matrix of size [11 x 14]
       PARAMS['C48'] - matrix of size [11 x 14]
       PARAMS['C49'] - matrix of size [11 x 14]
       PARAMS['D01'] - matrix of size [11 x 14]
       PARAMS['D02'] - matrix of size [11 x 14]
       PARAMS['D03'] - matrix of size [11 x 14]
       PARAMS['D04'] - matrix of size [11 x 14]
       PARAMS['D05'] - matrix of size [11 x 14]
       PARAMS['D06'] - matrix of size [11 x 14]
       PARAMS['D07'] - matrix of size [11 x 14]
       PARAMS['D08'] - matrix of size [11 x 14]
       PARAMS['D09'] - matrix of size [11 x 14]
       PARAMS['D10'] - matrix of size [11 x 14]
       PARAMS['D11'] - matrix of size [11 x 14]
       PARAMS['D12'] - matrix of size [11 x 14]
       PARAMS['D13'] - matrix of size [11 x 14]
       PARAMS['D14'] - matrix of size [11 x 14]
       PARAMS['D15'] - matrix of size [11 x 14]
       PARAMS['D16'] - matrix of size [11 x 14]
       PARAMS['D17'] - matrix of size [11 x 14]
       PARAMS['D18'] - matrix of size [11 x 14]
       PARAMS['D19'] - matrix of size [11 x 14]
       PARAMS['D20'] - matrix of size [11 x 14]
       PARAMS['D21'] - matrix of size [11 x 14]
       PARAMS['D22'] - matrix of size [11 x 14]
       PARAMS['D23'] - matrix of size [11 x 14]
       PARAMS['D24'] - matrix of size [11 x 14]
       PARAMS['D25'] - matrix of size [11 x 14]
       PARAMS['D26'] - matrix of size [11 x 14]
       PARAMS['D27'] - matrix of size [11 x 14]
       PARAMS['D28'] - matrix of size [11 x 14]
       PARAMS['D29'] - matrix of size [11 x 14]
       PARAMS['D30'] - matrix of size [11 x 14]
       PARAMS['D31'] - matrix of size [11 x 14]
       PARAMS['D32'] - matrix of size [11 x 14]
       PARAMS['D33'] - matrix of size [11 x 14]
       PARAMS['D34'] - matrix of size [11 x 14]
       PARAMS['D35'] - matrix of size [11 x 14]
       PARAMS['D36'] - matrix of size [11 x 14]
       PARAMS['D37'] - matrix of size [11 x 14]
       PARAMS['D38'] - matrix of size [11 x 14]
       PARAMS['D39'] - matrix of size [11 x 14]
       PARAMS['D40'] - matrix of size [11 x 14]
       PARAMS['D41'] - matrix of size [11 x 14]
       PARAMS['D42'] - matrix of size [11 x 14]
       PARAMS['D43'] - matrix of size [11 x 14]
       PARAMS['D44'] - matrix of size [11 x 14]
       PARAMS['D45'] - matrix of size [11 x 14]
       PARAMS['D46'] - matrix of size [11 x 14]
       PARAMS['D47'] - matrix of size [11 x 14]
       PARAMS['D48'] - matrix of size [11 x 14]
       PARAMS['D49'] - matrix of size [11 x 14]
       PARAMS['D50'] - matrix of size [11 x 14]
       PARAMS['c02'] - column vector of length 11
       PARAMS['c03'] - column vector of length 11
       PARAMS['c04'] - column vector of length 11
       PARAMS['c05'] - column vector of length 11
       PARAMS['c06'] - column vector of length 11
       PARAMS['c07'] - column vector of length 11
       PARAMS['c08'] - column vector of length 11
       PARAMS['c09'] - column vector of length 11
       PARAMS['c10'] - column vector of length 11
       PARAMS['c11'] - column vector of length 11
       PARAMS['c12'] - column vector of length 11
       PARAMS['c13'] - column vector of length 11
       PARAMS['c14'] - column vector of length 11
       PARAMS['c15'] - column vector of length 11
       PARAMS['c16'] - column vector of length 11
       PARAMS['c17'] - column vector of length 11
       PARAMS['c18'] - column vector of length 11
       PARAMS['c19'] - column vector of length 11
       PARAMS['c20'] - column vector of length 11
       PARAMS['c21'] - column vector of length 11
       PARAMS['c22'] - column vector of length 11
       PARAMS['c23'] - column vector of length 11
       PARAMS['c24'] - column vector of length 11
       PARAMS['c25'] - column vector of length 11
       PARAMS['c26'] - column vector of length 11
       PARAMS['c27'] - column vector of length 11
       PARAMS['c28'] - column vector of length 11
       PARAMS['c29'] - column vector of length 11
       PARAMS['c30'] - column vector of length 11
       PARAMS['c31'] - column vector of length 11
       PARAMS['c32'] - column vector of length 11
       PARAMS['c33'] - column vector of length 11
       PARAMS['c34'] - column vector of length 11
       PARAMS['c35'] - column vector of length 11
       PARAMS['c36'] - column vector of length 11
       PARAMS['c37'] - column vector of length 11
       PARAMS['c38'] - column vector of length 11
       PARAMS['c39'] - column vector of length 11
       PARAMS['c40'] - column vector of length 11
       PARAMS['c41'] - column vector of length 11
       PARAMS['c42'] - column vector of length 11
       PARAMS['c43'] - column vector of length 11
       PARAMS['c44'] - column vector of length 11
       PARAMS['c45'] - column vector of length 11
       PARAMS['c46'] - column vector of length 11
       PARAMS['c47'] - column vector of length 11
       PARAMS['c48'] - column vector of length 11
       PARAMS['c49'] - column vector of length 11
       PARAMS['c50'] - column vector of length 11
       PARAMS['minusA_times_x0'] - column vector of length 11

   OUTPUT returns the values of the last iteration of the solver where
       OUTPUT['u0'] - column vector of size 700

   [OUTPUT, EXITFLAG] = mpcc_py.mpcc_solve(PARAMS) returns additionally
   the integer EXITFLAG indicating the state of the solution with 
       1 - Optimal solution has been found (subject to desired accuracy)
       2 - (only branch-and-bound) A feasible point has been identified for which the objective value is no more than codeoptions.mip.mipgap*100 per cent worse than the global optimum 
       0 - Timeout - maximum number of iterations reached
      -1 - (only branch-and-bound) Infeasible problem (problems solving the root relaxation to the desired accuracy)
      -2 - (only branch-and-bound) Out of memory - cannot fit branch and bound nodes into pre-allocated memory.
      -6 - NaN or INF occured during evaluation of functions and derivatives. Please check your initial guess.
      -7 - Method could not progress. Problem may be infeasible. Run FORCESdiagnostics on your problem to check for most common errors in the formulation.
     -10 - The convex solver could not proceed due to an internal error
    -100 - License error

   [OUTPUT, EXITFLAG, INFO] = mpcc_py.mpcc_solve(PARAMS) returns 
   additional information about the last iterate:
       INFO.it        - number of iterations that lead to this result
       INFO.it2opt    - number of convex solves
       INFO.res_eq    - max. equality constraint residual
       INFO.res_ineq  - max. inequality constraint residual
       INFO.pobj      - primal objective
       INFO.dobj      - dual objective
       INFO.dgap      - duality gap := pobj - dobj
       INFO.rdgap     - relative duality gap := |dgap / pobj|
       INFO.gradient_lag_norm - infinity norm of gradient of Lagrangian
       INFO.mu        - duality measure
       INFO.sigma     - centering parameter
       INFO.lsit_aff  - iterations of affine line search
       INFO.lsit_cc   - iterations of line search (combined direction)
       INFO.step_aff  - step size (affine direction)
       INFO.step_cc   - step size (centering direction)
       INFO.solvetime - Time needed for solve (wall clock time)

 See also COPYING

'''

import ctypes
import os
import numpy as np
import numpy.ctypeslib as npct
import sys

#_lib = ctypes.CDLL(os.path.join(os.getcwd(),'mpcc/lib/mpcc.so')) 
try:
    _lib = ctypes.CDLL(os.path.join(os.path.dirname(os.path.abspath(__file__)),'mpcc/lib/mpcc.so'))
    csolver = getattr(_lib,'mpcc_solve')
except:
    _lib = ctypes.CDLL(os.path.join(os.path.dirname(os.path.abspath(__file__)),'mpcc/lib/libmpcc.so'))
    csolver = getattr(_lib,'mpcc_solve')

class mpcc_params_ctypes(ctypes.Structure):
#    @classmethod
#    def from_param(self):
#        return self
    _fields_ = [('H01', ctypes.c_double * 196),
('H02', ctypes.c_double * 196),
('H03', ctypes.c_double * 196),
('H04', ctypes.c_double * 196),
('H05', ctypes.c_double * 196),
('H06', ctypes.c_double * 196),
('H07', ctypes.c_double * 196),
('H08', ctypes.c_double * 196),
('H09', ctypes.c_double * 196),
('H10', ctypes.c_double * 196),
('H11', ctypes.c_double * 196),
('H12', ctypes.c_double * 196),
('H13', ctypes.c_double * 196),
('H14', ctypes.c_double * 196),
('H15', ctypes.c_double * 196),
('H16', ctypes.c_double * 196),
('H17', ctypes.c_double * 196),
('H18', ctypes.c_double * 196),
('H19', ctypes.c_double * 196),
('H20', ctypes.c_double * 196),
('H21', ctypes.c_double * 196),
('H22', ctypes.c_double * 196),
('H23', ctypes.c_double * 196),
('H24', ctypes.c_double * 196),
('H25', ctypes.c_double * 196),
('H26', ctypes.c_double * 196),
('H27', ctypes.c_double * 196),
('H28', ctypes.c_double * 196),
('H29', ctypes.c_double * 196),
('H30', ctypes.c_double * 196),
('H31', ctypes.c_double * 196),
('H32', ctypes.c_double * 196),
('H33', ctypes.c_double * 196),
('H34', ctypes.c_double * 196),
('H35', ctypes.c_double * 196),
('H36', ctypes.c_double * 196),
('H37', ctypes.c_double * 196),
('H38', ctypes.c_double * 196),
('H39', ctypes.c_double * 196),
('H40', ctypes.c_double * 196),
('H41', ctypes.c_double * 196),
('H42', ctypes.c_double * 196),
('H43', ctypes.c_double * 196),
('H44', ctypes.c_double * 196),
('H45', ctypes.c_double * 196),
('H46', ctypes.c_double * 196),
('H47', ctypes.c_double * 196),
('H48', ctypes.c_double * 196),
('H49', ctypes.c_double * 196),
('H50', ctypes.c_double * 196),
('f01', ctypes.c_double * 14),
('f02', ctypes.c_double * 14),
('f03', ctypes.c_double * 14),
('f04', ctypes.c_double * 14),
('f05', ctypes.c_double * 14),
('f06', ctypes.c_double * 14),
('f07', ctypes.c_double * 14),
('f08', ctypes.c_double * 14),
('f09', ctypes.c_double * 14),
('f10', ctypes.c_double * 14),
('f11', ctypes.c_double * 14),
('f12', ctypes.c_double * 14),
('f13', ctypes.c_double * 14),
('f14', ctypes.c_double * 14),
('f15', ctypes.c_double * 14),
('f16', ctypes.c_double * 14),
('f17', ctypes.c_double * 14),
('f18', ctypes.c_double * 14),
('f19', ctypes.c_double * 14),
('f20', ctypes.c_double * 14),
('f21', ctypes.c_double * 14),
('f22', ctypes.c_double * 14),
('f23', ctypes.c_double * 14),
('f24', ctypes.c_double * 14),
('f25', ctypes.c_double * 14),
('f26', ctypes.c_double * 14),
('f27', ctypes.c_double * 14),
('f28', ctypes.c_double * 14),
('f29', ctypes.c_double * 14),
('f30', ctypes.c_double * 14),
('f31', ctypes.c_double * 14),
('f32', ctypes.c_double * 14),
('f33', ctypes.c_double * 14),
('f34', ctypes.c_double * 14),
('f35', ctypes.c_double * 14),
('f36', ctypes.c_double * 14),
('f37', ctypes.c_double * 14),
('f38', ctypes.c_double * 14),
('f39', ctypes.c_double * 14),
('f40', ctypes.c_double * 14),
('f41', ctypes.c_double * 14),
('f42', ctypes.c_double * 14),
('f43', ctypes.c_double * 14),
('f44', ctypes.c_double * 14),
('f45', ctypes.c_double * 14),
('f46', ctypes.c_double * 14),
('f47', ctypes.c_double * 14),
('f48', ctypes.c_double * 14),
('f49', ctypes.c_double * 14),
('f50', ctypes.c_double * 14),
('A01', ctypes.c_double * 28),
('A02', ctypes.c_double * 28),
('A03', ctypes.c_double * 28),
('A04', ctypes.c_double * 28),
('A05', ctypes.c_double * 28),
('A06', ctypes.c_double * 28),
('A07', ctypes.c_double * 28),
('A08', ctypes.c_double * 28),
('A09', ctypes.c_double * 28),
('A10', ctypes.c_double * 28),
('A11', ctypes.c_double * 28),
('A12', ctypes.c_double * 28),
('A13', ctypes.c_double * 28),
('A14', ctypes.c_double * 28),
('A15', ctypes.c_double * 28),
('A16', ctypes.c_double * 28),
('A17', ctypes.c_double * 28),
('A18', ctypes.c_double * 28),
('A19', ctypes.c_double * 28),
('A20', ctypes.c_double * 28),
('A21', ctypes.c_double * 28),
('A22', ctypes.c_double * 28),
('A23', ctypes.c_double * 28),
('A24', ctypes.c_double * 28),
('A25', ctypes.c_double * 28),
('A26', ctypes.c_double * 28),
('A27', ctypes.c_double * 28),
('A28', ctypes.c_double * 28),
('A29', ctypes.c_double * 28),
('A30', ctypes.c_double * 28),
('A31', ctypes.c_double * 28),
('A32', ctypes.c_double * 28),
('A33', ctypes.c_double * 28),
('A34', ctypes.c_double * 28),
('A35', ctypes.c_double * 28),
('A36', ctypes.c_double * 28),
('A37', ctypes.c_double * 28),
('A38', ctypes.c_double * 28),
('A39', ctypes.c_double * 28),
('A40', ctypes.c_double * 28),
('A41', ctypes.c_double * 28),
('A42', ctypes.c_double * 28),
('A43', ctypes.c_double * 28),
('A44', ctypes.c_double * 28),
('A45', ctypes.c_double * 28),
('A46', ctypes.c_double * 28),
('A47', ctypes.c_double * 28),
('A48', ctypes.c_double * 28),
('A49', ctypes.c_double * 28),
('A50', ctypes.c_double * 28),
('b01', ctypes.c_double * 2),
('b02', ctypes.c_double * 2),
('b03', ctypes.c_double * 2),
('b04', ctypes.c_double * 2),
('b05', ctypes.c_double * 2),
('b06', ctypes.c_double * 2),
('b07', ctypes.c_double * 2),
('b08', ctypes.c_double * 2),
('b09', ctypes.c_double * 2),
('b10', ctypes.c_double * 2),
('b11', ctypes.c_double * 2),
('b12', ctypes.c_double * 2),
('b13', ctypes.c_double * 2),
('b14', ctypes.c_double * 2),
('b15', ctypes.c_double * 2),
('b16', ctypes.c_double * 2),
('b17', ctypes.c_double * 2),
('b18', ctypes.c_double * 2),
('b19', ctypes.c_double * 2),
('b20', ctypes.c_double * 2),
('b21', ctypes.c_double * 2),
('b22', ctypes.c_double * 2),
('b23', ctypes.c_double * 2),
('b24', ctypes.c_double * 2),
('b25', ctypes.c_double * 2),
('b26', ctypes.c_double * 2),
('b27', ctypes.c_double * 2),
('b28', ctypes.c_double * 2),
('b29', ctypes.c_double * 2),
('b30', ctypes.c_double * 2),
('b31', ctypes.c_double * 2),
('b32', ctypes.c_double * 2),
('b33', ctypes.c_double * 2),
('b34', ctypes.c_double * 2),
('b35', ctypes.c_double * 2),
('b36', ctypes.c_double * 2),
('b37', ctypes.c_double * 2),
('b38', ctypes.c_double * 2),
('b39', ctypes.c_double * 2),
('b40', ctypes.c_double * 2),
('b41', ctypes.c_double * 2),
('b42', ctypes.c_double * 2),
('b43', ctypes.c_double * 2),
('b44', ctypes.c_double * 2),
('b45', ctypes.c_double * 2),
('b46', ctypes.c_double * 2),
('b47', ctypes.c_double * 2),
('b48', ctypes.c_double * 2),
('b49', ctypes.c_double * 2),
('b50', ctypes.c_double * 2),
('C01', ctypes.c_double * 154),
('C02', ctypes.c_double * 154),
('C03', ctypes.c_double * 154),
('C04', ctypes.c_double * 154),
('C05', ctypes.c_double * 154),
('C06', ctypes.c_double * 154),
('C07', ctypes.c_double * 154),
('C08', ctypes.c_double * 154),
('C09', ctypes.c_double * 154),
('C10', ctypes.c_double * 154),
('C11', ctypes.c_double * 154),
('C12', ctypes.c_double * 154),
('C13', ctypes.c_double * 154),
('C14', ctypes.c_double * 154),
('C15', ctypes.c_double * 154),
('C16', ctypes.c_double * 154),
('C17', ctypes.c_double * 154),
('C18', ctypes.c_double * 154),
('C19', ctypes.c_double * 154),
('C20', ctypes.c_double * 154),
('C21', ctypes.c_double * 154),
('C22', ctypes.c_double * 154),
('C23', ctypes.c_double * 154),
('C24', ctypes.c_double * 154),
('C25', ctypes.c_double * 154),
('C26', ctypes.c_double * 154),
('C27', ctypes.c_double * 154),
('C28', ctypes.c_double * 154),
('C29', ctypes.c_double * 154),
('C30', ctypes.c_double * 154),
('C31', ctypes.c_double * 154),
('C32', ctypes.c_double * 154),
('C33', ctypes.c_double * 154),
('C34', ctypes.c_double * 154),
('C35', ctypes.c_double * 154),
('C36', ctypes.c_double * 154),
('C37', ctypes.c_double * 154),
('C38', ctypes.c_double * 154),
('C39', ctypes.c_double * 154),
('C40', ctypes.c_double * 154),
('C41', ctypes.c_double * 154),
('C42', ctypes.c_double * 154),
('C43', ctypes.c_double * 154),
('C44', ctypes.c_double * 154),
('C45', ctypes.c_double * 154),
('C46', ctypes.c_double * 154),
('C47', ctypes.c_double * 154),
('C48', ctypes.c_double * 154),
('C49', ctypes.c_double * 154),
('D01', ctypes.c_double * 154),
('D02', ctypes.c_double * 154),
('D03', ctypes.c_double * 154),
('D04', ctypes.c_double * 154),
('D05', ctypes.c_double * 154),
('D06', ctypes.c_double * 154),
('D07', ctypes.c_double * 154),
('D08', ctypes.c_double * 154),
('D09', ctypes.c_double * 154),
('D10', ctypes.c_double * 154),
('D11', ctypes.c_double * 154),
('D12', ctypes.c_double * 154),
('D13', ctypes.c_double * 154),
('D14', ctypes.c_double * 154),
('D15', ctypes.c_double * 154),
('D16', ctypes.c_double * 154),
('D17', ctypes.c_double * 154),
('D18', ctypes.c_double * 154),
('D19', ctypes.c_double * 154),
('D20', ctypes.c_double * 154),
('D21', ctypes.c_double * 154),
('D22', ctypes.c_double * 154),
('D23', ctypes.c_double * 154),
('D24', ctypes.c_double * 154),
('D25', ctypes.c_double * 154),
('D26', ctypes.c_double * 154),
('D27', ctypes.c_double * 154),
('D28', ctypes.c_double * 154),
('D29', ctypes.c_double * 154),
('D30', ctypes.c_double * 154),
('D31', ctypes.c_double * 154),
('D32', ctypes.c_double * 154),
('D33', ctypes.c_double * 154),
('D34', ctypes.c_double * 154),
('D35', ctypes.c_double * 154),
('D36', ctypes.c_double * 154),
('D37', ctypes.c_double * 154),
('D38', ctypes.c_double * 154),
('D39', ctypes.c_double * 154),
('D40', ctypes.c_double * 154),
('D41', ctypes.c_double * 154),
('D42', ctypes.c_double * 154),
('D43', ctypes.c_double * 154),
('D44', ctypes.c_double * 154),
('D45', ctypes.c_double * 154),
('D46', ctypes.c_double * 154),
('D47', ctypes.c_double * 154),
('D48', ctypes.c_double * 154),
('D49', ctypes.c_double * 154),
('D50', ctypes.c_double * 154),
('c02', ctypes.c_double * 11),
('c03', ctypes.c_double * 11),
('c04', ctypes.c_double * 11),
('c05', ctypes.c_double * 11),
('c06', ctypes.c_double * 11),
('c07', ctypes.c_double * 11),
('c08', ctypes.c_double * 11),
('c09', ctypes.c_double * 11),
('c10', ctypes.c_double * 11),
('c11', ctypes.c_double * 11),
('c12', ctypes.c_double * 11),
('c13', ctypes.c_double * 11),
('c14', ctypes.c_double * 11),
('c15', ctypes.c_double * 11),
('c16', ctypes.c_double * 11),
('c17', ctypes.c_double * 11),
('c18', ctypes.c_double * 11),
('c19', ctypes.c_double * 11),
('c20', ctypes.c_double * 11),
('c21', ctypes.c_double * 11),
('c22', ctypes.c_double * 11),
('c23', ctypes.c_double * 11),
('c24', ctypes.c_double * 11),
('c25', ctypes.c_double * 11),
('c26', ctypes.c_double * 11),
('c27', ctypes.c_double * 11),
('c28', ctypes.c_double * 11),
('c29', ctypes.c_double * 11),
('c30', ctypes.c_double * 11),
('c31', ctypes.c_double * 11),
('c32', ctypes.c_double * 11),
('c33', ctypes.c_double * 11),
('c34', ctypes.c_double * 11),
('c35', ctypes.c_double * 11),
('c36', ctypes.c_double * 11),
('c37', ctypes.c_double * 11),
('c38', ctypes.c_double * 11),
('c39', ctypes.c_double * 11),
('c40', ctypes.c_double * 11),
('c41', ctypes.c_double * 11),
('c42', ctypes.c_double * 11),
('c43', ctypes.c_double * 11),
('c44', ctypes.c_double * 11),
('c45', ctypes.c_double * 11),
('c46', ctypes.c_double * 11),
('c47', ctypes.c_double * 11),
('c48', ctypes.c_double * 11),
('c49', ctypes.c_double * 11),
('c50', ctypes.c_double * 11),
('minusA_times_x0', ctypes.c_double * 11),
]

mpcc_params = {'H01' : np.array([]),
'H02' : np.array([]),
'H03' : np.array([]),
'H04' : np.array([]),
'H05' : np.array([]),
'H06' : np.array([]),
'H07' : np.array([]),
'H08' : np.array([]),
'H09' : np.array([]),
'H10' : np.array([]),
'H11' : np.array([]),
'H12' : np.array([]),
'H13' : np.array([]),
'H14' : np.array([]),
'H15' : np.array([]),
'H16' : np.array([]),
'H17' : np.array([]),
'H18' : np.array([]),
'H19' : np.array([]),
'H20' : np.array([]),
'H21' : np.array([]),
'H22' : np.array([]),
'H23' : np.array([]),
'H24' : np.array([]),
'H25' : np.array([]),
'H26' : np.array([]),
'H27' : np.array([]),
'H28' : np.array([]),
'H29' : np.array([]),
'H30' : np.array([]),
'H31' : np.array([]),
'H32' : np.array([]),
'H33' : np.array([]),
'H34' : np.array([]),
'H35' : np.array([]),
'H36' : np.array([]),
'H37' : np.array([]),
'H38' : np.array([]),
'H39' : np.array([]),
'H40' : np.array([]),
'H41' : np.array([]),
'H42' : np.array([]),
'H43' : np.array([]),
'H44' : np.array([]),
'H45' : np.array([]),
'H46' : np.array([]),
'H47' : np.array([]),
'H48' : np.array([]),
'H49' : np.array([]),
'H50' : np.array([]),
'f01' : np.array([]),
'f02' : np.array([]),
'f03' : np.array([]),
'f04' : np.array([]),
'f05' : np.array([]),
'f06' : np.array([]),
'f07' : np.array([]),
'f08' : np.array([]),
'f09' : np.array([]),
'f10' : np.array([]),
'f11' : np.array([]),
'f12' : np.array([]),
'f13' : np.array([]),
'f14' : np.array([]),
'f15' : np.array([]),
'f16' : np.array([]),
'f17' : np.array([]),
'f18' : np.array([]),
'f19' : np.array([]),
'f20' : np.array([]),
'f21' : np.array([]),
'f22' : np.array([]),
'f23' : np.array([]),
'f24' : np.array([]),
'f25' : np.array([]),
'f26' : np.array([]),
'f27' : np.array([]),
'f28' : np.array([]),
'f29' : np.array([]),
'f30' : np.array([]),
'f31' : np.array([]),
'f32' : np.array([]),
'f33' : np.array([]),
'f34' : np.array([]),
'f35' : np.array([]),
'f36' : np.array([]),
'f37' : np.array([]),
'f38' : np.array([]),
'f39' : np.array([]),
'f40' : np.array([]),
'f41' : np.array([]),
'f42' : np.array([]),
'f43' : np.array([]),
'f44' : np.array([]),
'f45' : np.array([]),
'f46' : np.array([]),
'f47' : np.array([]),
'f48' : np.array([]),
'f49' : np.array([]),
'f50' : np.array([]),
'A01' : np.array([]),
'A02' : np.array([]),
'A03' : np.array([]),
'A04' : np.array([]),
'A05' : np.array([]),
'A06' : np.array([]),
'A07' : np.array([]),
'A08' : np.array([]),
'A09' : np.array([]),
'A10' : np.array([]),
'A11' : np.array([]),
'A12' : np.array([]),
'A13' : np.array([]),
'A14' : np.array([]),
'A15' : np.array([]),
'A16' : np.array([]),
'A17' : np.array([]),
'A18' : np.array([]),
'A19' : np.array([]),
'A20' : np.array([]),
'A21' : np.array([]),
'A22' : np.array([]),
'A23' : np.array([]),
'A24' : np.array([]),
'A25' : np.array([]),
'A26' : np.array([]),
'A27' : np.array([]),
'A28' : np.array([]),
'A29' : np.array([]),
'A30' : np.array([]),
'A31' : np.array([]),
'A32' : np.array([]),
'A33' : np.array([]),
'A34' : np.array([]),
'A35' : np.array([]),
'A36' : np.array([]),
'A37' : np.array([]),
'A38' : np.array([]),
'A39' : np.array([]),
'A40' : np.array([]),
'A41' : np.array([]),
'A42' : np.array([]),
'A43' : np.array([]),
'A44' : np.array([]),
'A45' : np.array([]),
'A46' : np.array([]),
'A47' : np.array([]),
'A48' : np.array([]),
'A49' : np.array([]),
'A50' : np.array([]),
'b01' : np.array([]),
'b02' : np.array([]),
'b03' : np.array([]),
'b04' : np.array([]),
'b05' : np.array([]),
'b06' : np.array([]),
'b07' : np.array([]),
'b08' : np.array([]),
'b09' : np.array([]),
'b10' : np.array([]),
'b11' : np.array([]),
'b12' : np.array([]),
'b13' : np.array([]),
'b14' : np.array([]),
'b15' : np.array([]),
'b16' : np.array([]),
'b17' : np.array([]),
'b18' : np.array([]),
'b19' : np.array([]),
'b20' : np.array([]),
'b21' : np.array([]),
'b22' : np.array([]),
'b23' : np.array([]),
'b24' : np.array([]),
'b25' : np.array([]),
'b26' : np.array([]),
'b27' : np.array([]),
'b28' : np.array([]),
'b29' : np.array([]),
'b30' : np.array([]),
'b31' : np.array([]),
'b32' : np.array([]),
'b33' : np.array([]),
'b34' : np.array([]),
'b35' : np.array([]),
'b36' : np.array([]),
'b37' : np.array([]),
'b38' : np.array([]),
'b39' : np.array([]),
'b40' : np.array([]),
'b41' : np.array([]),
'b42' : np.array([]),
'b43' : np.array([]),
'b44' : np.array([]),
'b45' : np.array([]),
'b46' : np.array([]),
'b47' : np.array([]),
'b48' : np.array([]),
'b49' : np.array([]),
'b50' : np.array([]),
'C01' : np.array([]),
'C02' : np.array([]),
'C03' : np.array([]),
'C04' : np.array([]),
'C05' : np.array([]),
'C06' : np.array([]),
'C07' : np.array([]),
'C08' : np.array([]),
'C09' : np.array([]),
'C10' : np.array([]),
'C11' : np.array([]),
'C12' : np.array([]),
'C13' : np.array([]),
'C14' : np.array([]),
'C15' : np.array([]),
'C16' : np.array([]),
'C17' : np.array([]),
'C18' : np.array([]),
'C19' : np.array([]),
'C20' : np.array([]),
'C21' : np.array([]),
'C22' : np.array([]),
'C23' : np.array([]),
'C24' : np.array([]),
'C25' : np.array([]),
'C26' : np.array([]),
'C27' : np.array([]),
'C28' : np.array([]),
'C29' : np.array([]),
'C30' : np.array([]),
'C31' : np.array([]),
'C32' : np.array([]),
'C33' : np.array([]),
'C34' : np.array([]),
'C35' : np.array([]),
'C36' : np.array([]),
'C37' : np.array([]),
'C38' : np.array([]),
'C39' : np.array([]),
'C40' : np.array([]),
'C41' : np.array([]),
'C42' : np.array([]),
'C43' : np.array([]),
'C44' : np.array([]),
'C45' : np.array([]),
'C46' : np.array([]),
'C47' : np.array([]),
'C48' : np.array([]),
'C49' : np.array([]),
'D01' : np.array([]),
'D02' : np.array([]),
'D03' : np.array([]),
'D04' : np.array([]),
'D05' : np.array([]),
'D06' : np.array([]),
'D07' : np.array([]),
'D08' : np.array([]),
'D09' : np.array([]),
'D10' : np.array([]),
'D11' : np.array([]),
'D12' : np.array([]),
'D13' : np.array([]),
'D14' : np.array([]),
'D15' : np.array([]),
'D16' : np.array([]),
'D17' : np.array([]),
'D18' : np.array([]),
'D19' : np.array([]),
'D20' : np.array([]),
'D21' : np.array([]),
'D22' : np.array([]),
'D23' : np.array([]),
'D24' : np.array([]),
'D25' : np.array([]),
'D26' : np.array([]),
'D27' : np.array([]),
'D28' : np.array([]),
'D29' : np.array([]),
'D30' : np.array([]),
'D31' : np.array([]),
'D32' : np.array([]),
'D33' : np.array([]),
'D34' : np.array([]),
'D35' : np.array([]),
'D36' : np.array([]),
'D37' : np.array([]),
'D38' : np.array([]),
'D39' : np.array([]),
'D40' : np.array([]),
'D41' : np.array([]),
'D42' : np.array([]),
'D43' : np.array([]),
'D44' : np.array([]),
'D45' : np.array([]),
'D46' : np.array([]),
'D47' : np.array([]),
'D48' : np.array([]),
'D49' : np.array([]),
'D50' : np.array([]),
'c02' : np.array([]),
'c03' : np.array([]),
'c04' : np.array([]),
'c05' : np.array([]),
'c06' : np.array([]),
'c07' : np.array([]),
'c08' : np.array([]),
'c09' : np.array([]),
'c10' : np.array([]),
'c11' : np.array([]),
'c12' : np.array([]),
'c13' : np.array([]),
'c14' : np.array([]),
'c15' : np.array([]),
'c16' : np.array([]),
'c17' : np.array([]),
'c18' : np.array([]),
'c19' : np.array([]),
'c20' : np.array([]),
'c21' : np.array([]),
'c22' : np.array([]),
'c23' : np.array([]),
'c24' : np.array([]),
'c25' : np.array([]),
'c26' : np.array([]),
'c27' : np.array([]),
'c28' : np.array([]),
'c29' : np.array([]),
'c30' : np.array([]),
'c31' : np.array([]),
'c32' : np.array([]),
'c33' : np.array([]),
'c34' : np.array([]),
'c35' : np.array([]),
'c36' : np.array([]),
'c37' : np.array([]),
'c38' : np.array([]),
'c39' : np.array([]),
'c40' : np.array([]),
'c41' : np.array([]),
'c42' : np.array([]),
'c43' : np.array([]),
'c44' : np.array([]),
'c45' : np.array([]),
'c46' : np.array([]),
'c47' : np.array([]),
'c48' : np.array([]),
'c49' : np.array([]),
'c50' : np.array([]),
'minusA_times_x0' : np.array([]),
}
params = {'H01' : np.array([]),
'H02' : np.array([]),
'H03' : np.array([]),
'H04' : np.array([]),
'H05' : np.array([]),
'H06' : np.array([]),
'H07' : np.array([]),
'H08' : np.array([]),
'H09' : np.array([]),
'H10' : np.array([]),
'H11' : np.array([]),
'H12' : np.array([]),
'H13' : np.array([]),
'H14' : np.array([]),
'H15' : np.array([]),
'H16' : np.array([]),
'H17' : np.array([]),
'H18' : np.array([]),
'H19' : np.array([]),
'H20' : np.array([]),
'H21' : np.array([]),
'H22' : np.array([]),
'H23' : np.array([]),
'H24' : np.array([]),
'H25' : np.array([]),
'H26' : np.array([]),
'H27' : np.array([]),
'H28' : np.array([]),
'H29' : np.array([]),
'H30' : np.array([]),
'H31' : np.array([]),
'H32' : np.array([]),
'H33' : np.array([]),
'H34' : np.array([]),
'H35' : np.array([]),
'H36' : np.array([]),
'H37' : np.array([]),
'H38' : np.array([]),
'H39' : np.array([]),
'H40' : np.array([]),
'H41' : np.array([]),
'H42' : np.array([]),
'H43' : np.array([]),
'H44' : np.array([]),
'H45' : np.array([]),
'H46' : np.array([]),
'H47' : np.array([]),
'H48' : np.array([]),
'H49' : np.array([]),
'H50' : np.array([]),
'f01' : np.array([]),
'f02' : np.array([]),
'f03' : np.array([]),
'f04' : np.array([]),
'f05' : np.array([]),
'f06' : np.array([]),
'f07' : np.array([]),
'f08' : np.array([]),
'f09' : np.array([]),
'f10' : np.array([]),
'f11' : np.array([]),
'f12' : np.array([]),
'f13' : np.array([]),
'f14' : np.array([]),
'f15' : np.array([]),
'f16' : np.array([]),
'f17' : np.array([]),
'f18' : np.array([]),
'f19' : np.array([]),
'f20' : np.array([]),
'f21' : np.array([]),
'f22' : np.array([]),
'f23' : np.array([]),
'f24' : np.array([]),
'f25' : np.array([]),
'f26' : np.array([]),
'f27' : np.array([]),
'f28' : np.array([]),
'f29' : np.array([]),
'f30' : np.array([]),
'f31' : np.array([]),
'f32' : np.array([]),
'f33' : np.array([]),
'f34' : np.array([]),
'f35' : np.array([]),
'f36' : np.array([]),
'f37' : np.array([]),
'f38' : np.array([]),
'f39' : np.array([]),
'f40' : np.array([]),
'f41' : np.array([]),
'f42' : np.array([]),
'f43' : np.array([]),
'f44' : np.array([]),
'f45' : np.array([]),
'f46' : np.array([]),
'f47' : np.array([]),
'f48' : np.array([]),
'f49' : np.array([]),
'f50' : np.array([]),
'A01' : np.array([]),
'A02' : np.array([]),
'A03' : np.array([]),
'A04' : np.array([]),
'A05' : np.array([]),
'A06' : np.array([]),
'A07' : np.array([]),
'A08' : np.array([]),
'A09' : np.array([]),
'A10' : np.array([]),
'A11' : np.array([]),
'A12' : np.array([]),
'A13' : np.array([]),
'A14' : np.array([]),
'A15' : np.array([]),
'A16' : np.array([]),
'A17' : np.array([]),
'A18' : np.array([]),
'A19' : np.array([]),
'A20' : np.array([]),
'A21' : np.array([]),
'A22' : np.array([]),
'A23' : np.array([]),
'A24' : np.array([]),
'A25' : np.array([]),
'A26' : np.array([]),
'A27' : np.array([]),
'A28' : np.array([]),
'A29' : np.array([]),
'A30' : np.array([]),
'A31' : np.array([]),
'A32' : np.array([]),
'A33' : np.array([]),
'A34' : np.array([]),
'A35' : np.array([]),
'A36' : np.array([]),
'A37' : np.array([]),
'A38' : np.array([]),
'A39' : np.array([]),
'A40' : np.array([]),
'A41' : np.array([]),
'A42' : np.array([]),
'A43' : np.array([]),
'A44' : np.array([]),
'A45' : np.array([]),
'A46' : np.array([]),
'A47' : np.array([]),
'A48' : np.array([]),
'A49' : np.array([]),
'A50' : np.array([]),
'b01' : np.array([]),
'b02' : np.array([]),
'b03' : np.array([]),
'b04' : np.array([]),
'b05' : np.array([]),
'b06' : np.array([]),
'b07' : np.array([]),
'b08' : np.array([]),
'b09' : np.array([]),
'b10' : np.array([]),
'b11' : np.array([]),
'b12' : np.array([]),
'b13' : np.array([]),
'b14' : np.array([]),
'b15' : np.array([]),
'b16' : np.array([]),
'b17' : np.array([]),
'b18' : np.array([]),
'b19' : np.array([]),
'b20' : np.array([]),
'b21' : np.array([]),
'b22' : np.array([]),
'b23' : np.array([]),
'b24' : np.array([]),
'b25' : np.array([]),
'b26' : np.array([]),
'b27' : np.array([]),
'b28' : np.array([]),
'b29' : np.array([]),
'b30' : np.array([]),
'b31' : np.array([]),
'b32' : np.array([]),
'b33' : np.array([]),
'b34' : np.array([]),
'b35' : np.array([]),
'b36' : np.array([]),
'b37' : np.array([]),
'b38' : np.array([]),
'b39' : np.array([]),
'b40' : np.array([]),
'b41' : np.array([]),
'b42' : np.array([]),
'b43' : np.array([]),
'b44' : np.array([]),
'b45' : np.array([]),
'b46' : np.array([]),
'b47' : np.array([]),
'b48' : np.array([]),
'b49' : np.array([]),
'b50' : np.array([]),
'C01' : np.array([]),
'C02' : np.array([]),
'C03' : np.array([]),
'C04' : np.array([]),
'C05' : np.array([]),
'C06' : np.array([]),
'C07' : np.array([]),
'C08' : np.array([]),
'C09' : np.array([]),
'C10' : np.array([]),
'C11' : np.array([]),
'C12' : np.array([]),
'C13' : np.array([]),
'C14' : np.array([]),
'C15' : np.array([]),
'C16' : np.array([]),
'C17' : np.array([]),
'C18' : np.array([]),
'C19' : np.array([]),
'C20' : np.array([]),
'C21' : np.array([]),
'C22' : np.array([]),
'C23' : np.array([]),
'C24' : np.array([]),
'C25' : np.array([]),
'C26' : np.array([]),
'C27' : np.array([]),
'C28' : np.array([]),
'C29' : np.array([]),
'C30' : np.array([]),
'C31' : np.array([]),
'C32' : np.array([]),
'C33' : np.array([]),
'C34' : np.array([]),
'C35' : np.array([]),
'C36' : np.array([]),
'C37' : np.array([]),
'C38' : np.array([]),
'C39' : np.array([]),
'C40' : np.array([]),
'C41' : np.array([]),
'C42' : np.array([]),
'C43' : np.array([]),
'C44' : np.array([]),
'C45' : np.array([]),
'C46' : np.array([]),
'C47' : np.array([]),
'C48' : np.array([]),
'C49' : np.array([]),
'D01' : np.array([]),
'D02' : np.array([]),
'D03' : np.array([]),
'D04' : np.array([]),
'D05' : np.array([]),
'D06' : np.array([]),
'D07' : np.array([]),
'D08' : np.array([]),
'D09' : np.array([]),
'D10' : np.array([]),
'D11' : np.array([]),
'D12' : np.array([]),
'D13' : np.array([]),
'D14' : np.array([]),
'D15' : np.array([]),
'D16' : np.array([]),
'D17' : np.array([]),
'D18' : np.array([]),
'D19' : np.array([]),
'D20' : np.array([]),
'D21' : np.array([]),
'D22' : np.array([]),
'D23' : np.array([]),
'D24' : np.array([]),
'D25' : np.array([]),
'D26' : np.array([]),
'D27' : np.array([]),
'D28' : np.array([]),
'D29' : np.array([]),
'D30' : np.array([]),
'D31' : np.array([]),
'D32' : np.array([]),
'D33' : np.array([]),
'D34' : np.array([]),
'D35' : np.array([]),
'D36' : np.array([]),
'D37' : np.array([]),
'D38' : np.array([]),
'D39' : np.array([]),
'D40' : np.array([]),
'D41' : np.array([]),
'D42' : np.array([]),
'D43' : np.array([]),
'D44' : np.array([]),
'D45' : np.array([]),
'D46' : np.array([]),
'D47' : np.array([]),
'D48' : np.array([]),
'D49' : np.array([]),
'D50' : np.array([]),
'c02' : np.array([]),
'c03' : np.array([]),
'c04' : np.array([]),
'c05' : np.array([]),
'c06' : np.array([]),
'c07' : np.array([]),
'c08' : np.array([]),
'c09' : np.array([]),
'c10' : np.array([]),
'c11' : np.array([]),
'c12' : np.array([]),
'c13' : np.array([]),
'c14' : np.array([]),
'c15' : np.array([]),
'c16' : np.array([]),
'c17' : np.array([]),
'c18' : np.array([]),
'c19' : np.array([]),
'c20' : np.array([]),
'c21' : np.array([]),
'c22' : np.array([]),
'c23' : np.array([]),
'c24' : np.array([]),
'c25' : np.array([]),
'c26' : np.array([]),
'c27' : np.array([]),
'c28' : np.array([]),
'c29' : np.array([]),
'c30' : np.array([]),
'c31' : np.array([]),
'c32' : np.array([]),
'c33' : np.array([]),
'c34' : np.array([]),
'c35' : np.array([]),
'c36' : np.array([]),
'c37' : np.array([]),
'c38' : np.array([]),
'c39' : np.array([]),
'c40' : np.array([]),
'c41' : np.array([]),
'c42' : np.array([]),
'c43' : np.array([]),
'c44' : np.array([]),
'c45' : np.array([]),
'c46' : np.array([]),
'c47' : np.array([]),
'c48' : np.array([]),
'c49' : np.array([]),
'c50' : np.array([]),
'minusA_times_x0' : np.array([]),
}
mpcc_params_types = {'H01' : np.float64,
'H02' : np.float64,
'H03' : np.float64,
'H04' : np.float64,
'H05' : np.float64,
'H06' : np.float64,
'H07' : np.float64,
'H08' : np.float64,
'H09' : np.float64,
'H10' : np.float64,
'H11' : np.float64,
'H12' : np.float64,
'H13' : np.float64,
'H14' : np.float64,
'H15' : np.float64,
'H16' : np.float64,
'H17' : np.float64,
'H18' : np.float64,
'H19' : np.float64,
'H20' : np.float64,
'H21' : np.float64,
'H22' : np.float64,
'H23' : np.float64,
'H24' : np.float64,
'H25' : np.float64,
'H26' : np.float64,
'H27' : np.float64,
'H28' : np.float64,
'H29' : np.float64,
'H30' : np.float64,
'H31' : np.float64,
'H32' : np.float64,
'H33' : np.float64,
'H34' : np.float64,
'H35' : np.float64,
'H36' : np.float64,
'H37' : np.float64,
'H38' : np.float64,
'H39' : np.float64,
'H40' : np.float64,
'H41' : np.float64,
'H42' : np.float64,
'H43' : np.float64,
'H44' : np.float64,
'H45' : np.float64,
'H46' : np.float64,
'H47' : np.float64,
'H48' : np.float64,
'H49' : np.float64,
'H50' : np.float64,
'f01' : np.float64,
'f02' : np.float64,
'f03' : np.float64,
'f04' : np.float64,
'f05' : np.float64,
'f06' : np.float64,
'f07' : np.float64,
'f08' : np.float64,
'f09' : np.float64,
'f10' : np.float64,
'f11' : np.float64,
'f12' : np.float64,
'f13' : np.float64,
'f14' : np.float64,
'f15' : np.float64,
'f16' : np.float64,
'f17' : np.float64,
'f18' : np.float64,
'f19' : np.float64,
'f20' : np.float64,
'f21' : np.float64,
'f22' : np.float64,
'f23' : np.float64,
'f24' : np.float64,
'f25' : np.float64,
'f26' : np.float64,
'f27' : np.float64,
'f28' : np.float64,
'f29' : np.float64,
'f30' : np.float64,
'f31' : np.float64,
'f32' : np.float64,
'f33' : np.float64,
'f34' : np.float64,
'f35' : np.float64,
'f36' : np.float64,
'f37' : np.float64,
'f38' : np.float64,
'f39' : np.float64,
'f40' : np.float64,
'f41' : np.float64,
'f42' : np.float64,
'f43' : np.float64,
'f44' : np.float64,
'f45' : np.float64,
'f46' : np.float64,
'f47' : np.float64,
'f48' : np.float64,
'f49' : np.float64,
'f50' : np.float64,
'A01' : np.float64,
'A02' : np.float64,
'A03' : np.float64,
'A04' : np.float64,
'A05' : np.float64,
'A06' : np.float64,
'A07' : np.float64,
'A08' : np.float64,
'A09' : np.float64,
'A10' : np.float64,
'A11' : np.float64,
'A12' : np.float64,
'A13' : np.float64,
'A14' : np.float64,
'A15' : np.float64,
'A16' : np.float64,
'A17' : np.float64,
'A18' : np.float64,
'A19' : np.float64,
'A20' : np.float64,
'A21' : np.float64,
'A22' : np.float64,
'A23' : np.float64,
'A24' : np.float64,
'A25' : np.float64,
'A26' : np.float64,
'A27' : np.float64,
'A28' : np.float64,
'A29' : np.float64,
'A30' : np.float64,
'A31' : np.float64,
'A32' : np.float64,
'A33' : np.float64,
'A34' : np.float64,
'A35' : np.float64,
'A36' : np.float64,
'A37' : np.float64,
'A38' : np.float64,
'A39' : np.float64,
'A40' : np.float64,
'A41' : np.float64,
'A42' : np.float64,
'A43' : np.float64,
'A44' : np.float64,
'A45' : np.float64,
'A46' : np.float64,
'A47' : np.float64,
'A48' : np.float64,
'A49' : np.float64,
'A50' : np.float64,
'b01' : np.float64,
'b02' : np.float64,
'b03' : np.float64,
'b04' : np.float64,
'b05' : np.float64,
'b06' : np.float64,
'b07' : np.float64,
'b08' : np.float64,
'b09' : np.float64,
'b10' : np.float64,
'b11' : np.float64,
'b12' : np.float64,
'b13' : np.float64,
'b14' : np.float64,
'b15' : np.float64,
'b16' : np.float64,
'b17' : np.float64,
'b18' : np.float64,
'b19' : np.float64,
'b20' : np.float64,
'b21' : np.float64,
'b22' : np.float64,
'b23' : np.float64,
'b24' : np.float64,
'b25' : np.float64,
'b26' : np.float64,
'b27' : np.float64,
'b28' : np.float64,
'b29' : np.float64,
'b30' : np.float64,
'b31' : np.float64,
'b32' : np.float64,
'b33' : np.float64,
'b34' : np.float64,
'b35' : np.float64,
'b36' : np.float64,
'b37' : np.float64,
'b38' : np.float64,
'b39' : np.float64,
'b40' : np.float64,
'b41' : np.float64,
'b42' : np.float64,
'b43' : np.float64,
'b44' : np.float64,
'b45' : np.float64,
'b46' : np.float64,
'b47' : np.float64,
'b48' : np.float64,
'b49' : np.float64,
'b50' : np.float64,
'C01' : np.float64,
'C02' : np.float64,
'C03' : np.float64,
'C04' : np.float64,
'C05' : np.float64,
'C06' : np.float64,
'C07' : np.float64,
'C08' : np.float64,
'C09' : np.float64,
'C10' : np.float64,
'C11' : np.float64,
'C12' : np.float64,
'C13' : np.float64,
'C14' : np.float64,
'C15' : np.float64,
'C16' : np.float64,
'C17' : np.float64,
'C18' : np.float64,
'C19' : np.float64,
'C20' : np.float64,
'C21' : np.float64,
'C22' : np.float64,
'C23' : np.float64,
'C24' : np.float64,
'C25' : np.float64,
'C26' : np.float64,
'C27' : np.float64,
'C28' : np.float64,
'C29' : np.float64,
'C30' : np.float64,
'C31' : np.float64,
'C32' : np.float64,
'C33' : np.float64,
'C34' : np.float64,
'C35' : np.float64,
'C36' : np.float64,
'C37' : np.float64,
'C38' : np.float64,
'C39' : np.float64,
'C40' : np.float64,
'C41' : np.float64,
'C42' : np.float64,
'C43' : np.float64,
'C44' : np.float64,
'C45' : np.float64,
'C46' : np.float64,
'C47' : np.float64,
'C48' : np.float64,
'C49' : np.float64,
'D01' : np.float64,
'D02' : np.float64,
'D03' : np.float64,
'D04' : np.float64,
'D05' : np.float64,
'D06' : np.float64,
'D07' : np.float64,
'D08' : np.float64,
'D09' : np.float64,
'D10' : np.float64,
'D11' : np.float64,
'D12' : np.float64,
'D13' : np.float64,
'D14' : np.float64,
'D15' : np.float64,
'D16' : np.float64,
'D17' : np.float64,
'D18' : np.float64,
'D19' : np.float64,
'D20' : np.float64,
'D21' : np.float64,
'D22' : np.float64,
'D23' : np.float64,
'D24' : np.float64,
'D25' : np.float64,
'D26' : np.float64,
'D27' : np.float64,
'D28' : np.float64,
'D29' : np.float64,
'D30' : np.float64,
'D31' : np.float64,
'D32' : np.float64,
'D33' : np.float64,
'D34' : np.float64,
'D35' : np.float64,
'D36' : np.float64,
'D37' : np.float64,
'D38' : np.float64,
'D39' : np.float64,
'D40' : np.float64,
'D41' : np.float64,
'D42' : np.float64,
'D43' : np.float64,
'D44' : np.float64,
'D45' : np.float64,
'D46' : np.float64,
'D47' : np.float64,
'D48' : np.float64,
'D49' : np.float64,
'D50' : np.float64,
'c02' : np.float64,
'c03' : np.float64,
'c04' : np.float64,
'c05' : np.float64,
'c06' : np.float64,
'c07' : np.float64,
'c08' : np.float64,
'c09' : np.float64,
'c10' : np.float64,
'c11' : np.float64,
'c12' : np.float64,
'c13' : np.float64,
'c14' : np.float64,
'c15' : np.float64,
'c16' : np.float64,
'c17' : np.float64,
'c18' : np.float64,
'c19' : np.float64,
'c20' : np.float64,
'c21' : np.float64,
'c22' : np.float64,
'c23' : np.float64,
'c24' : np.float64,
'c25' : np.float64,
'c26' : np.float64,
'c27' : np.float64,
'c28' : np.float64,
'c29' : np.float64,
'c30' : np.float64,
'c31' : np.float64,
'c32' : np.float64,
'c33' : np.float64,
'c34' : np.float64,
'c35' : np.float64,
'c36' : np.float64,
'c37' : np.float64,
'c38' : np.float64,
'c39' : np.float64,
'c40' : np.float64,
'c41' : np.float64,
'c42' : np.float64,
'c43' : np.float64,
'c44' : np.float64,
'c45' : np.float64,
'c46' : np.float64,
'c47' : np.float64,
'c48' : np.float64,
'c49' : np.float64,
'c50' : np.float64,
'minusA_times_x0' : np.float64,
}

class mpcc_outputs_ctypes(ctypes.Structure):
#    @classmethod
#    def from_param(self):
#        return self
    _fields_ = [('u0', ctypes.c_double * 700),
]

mpcc_outputs = {'u0' : np.array([]),
}


class mpcc_info(ctypes.Structure):
#    @classmethod
#    def from_param(self):
#        return self
    _fields_ = [('it', ctypes.c_int32),
('it2opt', ctypes.c_int32),
('res_eq', ctypes.c_double),
('res_ineq', ctypes.c_double),
('pobj', ctypes.c_double),
('dobj', ctypes.c_double),
('dgap', ctypes.c_double),
('rdgap', ctypes.c_double),
('gradient_lag_norm', ctypes.c_double),
('mu', ctypes.c_double),
('mu_aff', ctypes.c_double),
('sigma', ctypes.c_double),
('lsit_aff', ctypes.c_int32),
('lsit_cc', ctypes.c_int32),
('step_aff', ctypes.c_double),
('step_cc', ctypes.c_double),
('solvetime', ctypes.c_double)
]

class FILE(ctypes.Structure):
        pass
if sys.version_info.major == 2:
    PyFile_AsFile = ctypes.pythonapi.PyFile_AsFile # problem here with python 3 http://stackoverflow.com/questions/16130268/python-3-replacement-for-pyfile-asfile
    PyFile_AsFile.argtypes = [ctypes.py_object]
    PyFile_AsFile.restype = ctypes.POINTER(FILE)

# determine data types for solver function prototype 
csolver.argtypes = ( ctypes.POINTER(mpcc_params_ctypes), ctypes.POINTER(mpcc_outputs_ctypes), ctypes.POINTER(mpcc_info), ctypes.POINTER(FILE))
csolver.restype = ctypes.c_int

def mpcc_solve(params_arg):
    '''
a Python wrapper for a fast solver generated by FORCESPRO v4.2.0

   OUTPUT = mpcc_py.mpcc_solve(PARAMS) solves a multistage problem
   subject to the parameters supplied in the following dictionary:
       PARAMS['H01'] - matrix of size [14 x 14]
       PARAMS['H02'] - matrix of size [14 x 14]
       PARAMS['H03'] - matrix of size [14 x 14]
       PARAMS['H04'] - matrix of size [14 x 14]
       PARAMS['H05'] - matrix of size [14 x 14]
       PARAMS['H06'] - matrix of size [14 x 14]
       PARAMS['H07'] - matrix of size [14 x 14]
       PARAMS['H08'] - matrix of size [14 x 14]
       PARAMS['H09'] - matrix of size [14 x 14]
       PARAMS['H10'] - matrix of size [14 x 14]
       PARAMS['H11'] - matrix of size [14 x 14]
       PARAMS['H12'] - matrix of size [14 x 14]
       PARAMS['H13'] - matrix of size [14 x 14]
       PARAMS['H14'] - matrix of size [14 x 14]
       PARAMS['H15'] - matrix of size [14 x 14]
       PARAMS['H16'] - matrix of size [14 x 14]
       PARAMS['H17'] - matrix of size [14 x 14]
       PARAMS['H18'] - matrix of size [14 x 14]
       PARAMS['H19'] - matrix of size [14 x 14]
       PARAMS['H20'] - matrix of size [14 x 14]
       PARAMS['H21'] - matrix of size [14 x 14]
       PARAMS['H22'] - matrix of size [14 x 14]
       PARAMS['H23'] - matrix of size [14 x 14]
       PARAMS['H24'] - matrix of size [14 x 14]
       PARAMS['H25'] - matrix of size [14 x 14]
       PARAMS['H26'] - matrix of size [14 x 14]
       PARAMS['H27'] - matrix of size [14 x 14]
       PARAMS['H28'] - matrix of size [14 x 14]
       PARAMS['H29'] - matrix of size [14 x 14]
       PARAMS['H30'] - matrix of size [14 x 14]
       PARAMS['H31'] - matrix of size [14 x 14]
       PARAMS['H32'] - matrix of size [14 x 14]
       PARAMS['H33'] - matrix of size [14 x 14]
       PARAMS['H34'] - matrix of size [14 x 14]
       PARAMS['H35'] - matrix of size [14 x 14]
       PARAMS['H36'] - matrix of size [14 x 14]
       PARAMS['H37'] - matrix of size [14 x 14]
       PARAMS['H38'] - matrix of size [14 x 14]
       PARAMS['H39'] - matrix of size [14 x 14]
       PARAMS['H40'] - matrix of size [14 x 14]
       PARAMS['H41'] - matrix of size [14 x 14]
       PARAMS['H42'] - matrix of size [14 x 14]
       PARAMS['H43'] - matrix of size [14 x 14]
       PARAMS['H44'] - matrix of size [14 x 14]
       PARAMS['H45'] - matrix of size [14 x 14]
       PARAMS['H46'] - matrix of size [14 x 14]
       PARAMS['H47'] - matrix of size [14 x 14]
       PARAMS['H48'] - matrix of size [14 x 14]
       PARAMS['H49'] - matrix of size [14 x 14]
       PARAMS['H50'] - matrix of size [14 x 14]
       PARAMS['f01'] - column vector of length 14
       PARAMS['f02'] - column vector of length 14
       PARAMS['f03'] - column vector of length 14
       PARAMS['f04'] - column vector of length 14
       PARAMS['f05'] - column vector of length 14
       PARAMS['f06'] - column vector of length 14
       PARAMS['f07'] - column vector of length 14
       PARAMS['f08'] - column vector of length 14
       PARAMS['f09'] - column vector of length 14
       PARAMS['f10'] - column vector of length 14
       PARAMS['f11'] - column vector of length 14
       PARAMS['f12'] - column vector of length 14
       PARAMS['f13'] - column vector of length 14
       PARAMS['f14'] - column vector of length 14
       PARAMS['f15'] - column vector of length 14
       PARAMS['f16'] - column vector of length 14
       PARAMS['f17'] - column vector of length 14
       PARAMS['f18'] - column vector of length 14
       PARAMS['f19'] - column vector of length 14
       PARAMS['f20'] - column vector of length 14
       PARAMS['f21'] - column vector of length 14
       PARAMS['f22'] - column vector of length 14
       PARAMS['f23'] - column vector of length 14
       PARAMS['f24'] - column vector of length 14
       PARAMS['f25'] - column vector of length 14
       PARAMS['f26'] - column vector of length 14
       PARAMS['f27'] - column vector of length 14
       PARAMS['f28'] - column vector of length 14
       PARAMS['f29'] - column vector of length 14
       PARAMS['f30'] - column vector of length 14
       PARAMS['f31'] - column vector of length 14
       PARAMS['f32'] - column vector of length 14
       PARAMS['f33'] - column vector of length 14
       PARAMS['f34'] - column vector of length 14
       PARAMS['f35'] - column vector of length 14
       PARAMS['f36'] - column vector of length 14
       PARAMS['f37'] - column vector of length 14
       PARAMS['f38'] - column vector of length 14
       PARAMS['f39'] - column vector of length 14
       PARAMS['f40'] - column vector of length 14
       PARAMS['f41'] - column vector of length 14
       PARAMS['f42'] - column vector of length 14
       PARAMS['f43'] - column vector of length 14
       PARAMS['f44'] - column vector of length 14
       PARAMS['f45'] - column vector of length 14
       PARAMS['f46'] - column vector of length 14
       PARAMS['f47'] - column vector of length 14
       PARAMS['f48'] - column vector of length 14
       PARAMS['f49'] - column vector of length 14
       PARAMS['f50'] - column vector of length 14
       PARAMS['A01'] - matrix of size [2 x 14]
       PARAMS['A02'] - matrix of size [2 x 14]
       PARAMS['A03'] - matrix of size [2 x 14]
       PARAMS['A04'] - matrix of size [2 x 14]
       PARAMS['A05'] - matrix of size [2 x 14]
       PARAMS['A06'] - matrix of size [2 x 14]
       PARAMS['A07'] - matrix of size [2 x 14]
       PARAMS['A08'] - matrix of size [2 x 14]
       PARAMS['A09'] - matrix of size [2 x 14]
       PARAMS['A10'] - matrix of size [2 x 14]
       PARAMS['A11'] - matrix of size [2 x 14]
       PARAMS['A12'] - matrix of size [2 x 14]
       PARAMS['A13'] - matrix of size [2 x 14]
       PARAMS['A14'] - matrix of size [2 x 14]
       PARAMS['A15'] - matrix of size [2 x 14]
       PARAMS['A16'] - matrix of size [2 x 14]
       PARAMS['A17'] - matrix of size [2 x 14]
       PARAMS['A18'] - matrix of size [2 x 14]
       PARAMS['A19'] - matrix of size [2 x 14]
       PARAMS['A20'] - matrix of size [2 x 14]
       PARAMS['A21'] - matrix of size [2 x 14]
       PARAMS['A22'] - matrix of size [2 x 14]
       PARAMS['A23'] - matrix of size [2 x 14]
       PARAMS['A24'] - matrix of size [2 x 14]
       PARAMS['A25'] - matrix of size [2 x 14]
       PARAMS['A26'] - matrix of size [2 x 14]
       PARAMS['A27'] - matrix of size [2 x 14]
       PARAMS['A28'] - matrix of size [2 x 14]
       PARAMS['A29'] - matrix of size [2 x 14]
       PARAMS['A30'] - matrix of size [2 x 14]
       PARAMS['A31'] - matrix of size [2 x 14]
       PARAMS['A32'] - matrix of size [2 x 14]
       PARAMS['A33'] - matrix of size [2 x 14]
       PARAMS['A34'] - matrix of size [2 x 14]
       PARAMS['A35'] - matrix of size [2 x 14]
       PARAMS['A36'] - matrix of size [2 x 14]
       PARAMS['A37'] - matrix of size [2 x 14]
       PARAMS['A38'] - matrix of size [2 x 14]
       PARAMS['A39'] - matrix of size [2 x 14]
       PARAMS['A40'] - matrix of size [2 x 14]
       PARAMS['A41'] - matrix of size [2 x 14]
       PARAMS['A42'] - matrix of size [2 x 14]
       PARAMS['A43'] - matrix of size [2 x 14]
       PARAMS['A44'] - matrix of size [2 x 14]
       PARAMS['A45'] - matrix of size [2 x 14]
       PARAMS['A46'] - matrix of size [2 x 14]
       PARAMS['A47'] - matrix of size [2 x 14]
       PARAMS['A48'] - matrix of size [2 x 14]
       PARAMS['A49'] - matrix of size [2 x 14]
       PARAMS['A50'] - matrix of size [2 x 14]
       PARAMS['b01'] - column vector of length 2
       PARAMS['b02'] - column vector of length 2
       PARAMS['b03'] - column vector of length 2
       PARAMS['b04'] - column vector of length 2
       PARAMS['b05'] - column vector of length 2
       PARAMS['b06'] - column vector of length 2
       PARAMS['b07'] - column vector of length 2
       PARAMS['b08'] - column vector of length 2
       PARAMS['b09'] - column vector of length 2
       PARAMS['b10'] - column vector of length 2
       PARAMS['b11'] - column vector of length 2
       PARAMS['b12'] - column vector of length 2
       PARAMS['b13'] - column vector of length 2
       PARAMS['b14'] - column vector of length 2
       PARAMS['b15'] - column vector of length 2
       PARAMS['b16'] - column vector of length 2
       PARAMS['b17'] - column vector of length 2
       PARAMS['b18'] - column vector of length 2
       PARAMS['b19'] - column vector of length 2
       PARAMS['b20'] - column vector of length 2
       PARAMS['b21'] - column vector of length 2
       PARAMS['b22'] - column vector of length 2
       PARAMS['b23'] - column vector of length 2
       PARAMS['b24'] - column vector of length 2
       PARAMS['b25'] - column vector of length 2
       PARAMS['b26'] - column vector of length 2
       PARAMS['b27'] - column vector of length 2
       PARAMS['b28'] - column vector of length 2
       PARAMS['b29'] - column vector of length 2
       PARAMS['b30'] - column vector of length 2
       PARAMS['b31'] - column vector of length 2
       PARAMS['b32'] - column vector of length 2
       PARAMS['b33'] - column vector of length 2
       PARAMS['b34'] - column vector of length 2
       PARAMS['b35'] - column vector of length 2
       PARAMS['b36'] - column vector of length 2
       PARAMS['b37'] - column vector of length 2
       PARAMS['b38'] - column vector of length 2
       PARAMS['b39'] - column vector of length 2
       PARAMS['b40'] - column vector of length 2
       PARAMS['b41'] - column vector of length 2
       PARAMS['b42'] - column vector of length 2
       PARAMS['b43'] - column vector of length 2
       PARAMS['b44'] - column vector of length 2
       PARAMS['b45'] - column vector of length 2
       PARAMS['b46'] - column vector of length 2
       PARAMS['b47'] - column vector of length 2
       PARAMS['b48'] - column vector of length 2
       PARAMS['b49'] - column vector of length 2
       PARAMS['b50'] - column vector of length 2
       PARAMS['C01'] - matrix of size [11 x 14]
       PARAMS['C02'] - matrix of size [11 x 14]
       PARAMS['C03'] - matrix of size [11 x 14]
       PARAMS['C04'] - matrix of size [11 x 14]
       PARAMS['C05'] - matrix of size [11 x 14]
       PARAMS['C06'] - matrix of size [11 x 14]
       PARAMS['C07'] - matrix of size [11 x 14]
       PARAMS['C08'] - matrix of size [11 x 14]
       PARAMS['C09'] - matrix of size [11 x 14]
       PARAMS['C10'] - matrix of size [11 x 14]
       PARAMS['C11'] - matrix of size [11 x 14]
       PARAMS['C12'] - matrix of size [11 x 14]
       PARAMS['C13'] - matrix of size [11 x 14]
       PARAMS['C14'] - matrix of size [11 x 14]
       PARAMS['C15'] - matrix of size [11 x 14]
       PARAMS['C16'] - matrix of size [11 x 14]
       PARAMS['C17'] - matrix of size [11 x 14]
       PARAMS['C18'] - matrix of size [11 x 14]
       PARAMS['C19'] - matrix of size [11 x 14]
       PARAMS['C20'] - matrix of size [11 x 14]
       PARAMS['C21'] - matrix of size [11 x 14]
       PARAMS['C22'] - matrix of size [11 x 14]
       PARAMS['C23'] - matrix of size [11 x 14]
       PARAMS['C24'] - matrix of size [11 x 14]
       PARAMS['C25'] - matrix of size [11 x 14]
       PARAMS['C26'] - matrix of size [11 x 14]
       PARAMS['C27'] - matrix of size [11 x 14]
       PARAMS['C28'] - matrix of size [11 x 14]
       PARAMS['C29'] - matrix of size [11 x 14]
       PARAMS['C30'] - matrix of size [11 x 14]
       PARAMS['C31'] - matrix of size [11 x 14]
       PARAMS['C32'] - matrix of size [11 x 14]
       PARAMS['C33'] - matrix of size [11 x 14]
       PARAMS['C34'] - matrix of size [11 x 14]
       PARAMS['C35'] - matrix of size [11 x 14]
       PARAMS['C36'] - matrix of size [11 x 14]
       PARAMS['C37'] - matrix of size [11 x 14]
       PARAMS['C38'] - matrix of size [11 x 14]
       PARAMS['C39'] - matrix of size [11 x 14]
       PARAMS['C40'] - matrix of size [11 x 14]
       PARAMS['C41'] - matrix of size [11 x 14]
       PARAMS['C42'] - matrix of size [11 x 14]
       PARAMS['C43'] - matrix of size [11 x 14]
       PARAMS['C44'] - matrix of size [11 x 14]
       PARAMS['C45'] - matrix of size [11 x 14]
       PARAMS['C46'] - matrix of size [11 x 14]
       PARAMS['C47'] - matrix of size [11 x 14]
       PARAMS['C48'] - matrix of size [11 x 14]
       PARAMS['C49'] - matrix of size [11 x 14]
       PARAMS['D01'] - matrix of size [11 x 14]
       PARAMS['D02'] - matrix of size [11 x 14]
       PARAMS['D03'] - matrix of size [11 x 14]
       PARAMS['D04'] - matrix of size [11 x 14]
       PARAMS['D05'] - matrix of size [11 x 14]
       PARAMS['D06'] - matrix of size [11 x 14]
       PARAMS['D07'] - matrix of size [11 x 14]
       PARAMS['D08'] - matrix of size [11 x 14]
       PARAMS['D09'] - matrix of size [11 x 14]
       PARAMS['D10'] - matrix of size [11 x 14]
       PARAMS['D11'] - matrix of size [11 x 14]
       PARAMS['D12'] - matrix of size [11 x 14]
       PARAMS['D13'] - matrix of size [11 x 14]
       PARAMS['D14'] - matrix of size [11 x 14]
       PARAMS['D15'] - matrix of size [11 x 14]
       PARAMS['D16'] - matrix of size [11 x 14]
       PARAMS['D17'] - matrix of size [11 x 14]
       PARAMS['D18'] - matrix of size [11 x 14]
       PARAMS['D19'] - matrix of size [11 x 14]
       PARAMS['D20'] - matrix of size [11 x 14]
       PARAMS['D21'] - matrix of size [11 x 14]
       PARAMS['D22'] - matrix of size [11 x 14]
       PARAMS['D23'] - matrix of size [11 x 14]
       PARAMS['D24'] - matrix of size [11 x 14]
       PARAMS['D25'] - matrix of size [11 x 14]
       PARAMS['D26'] - matrix of size [11 x 14]
       PARAMS['D27'] - matrix of size [11 x 14]
       PARAMS['D28'] - matrix of size [11 x 14]
       PARAMS['D29'] - matrix of size [11 x 14]
       PARAMS['D30'] - matrix of size [11 x 14]
       PARAMS['D31'] - matrix of size [11 x 14]
       PARAMS['D32'] - matrix of size [11 x 14]
       PARAMS['D33'] - matrix of size [11 x 14]
       PARAMS['D34'] - matrix of size [11 x 14]
       PARAMS['D35'] - matrix of size [11 x 14]
       PARAMS['D36'] - matrix of size [11 x 14]
       PARAMS['D37'] - matrix of size [11 x 14]
       PARAMS['D38'] - matrix of size [11 x 14]
       PARAMS['D39'] - matrix of size [11 x 14]
       PARAMS['D40'] - matrix of size [11 x 14]
       PARAMS['D41'] - matrix of size [11 x 14]
       PARAMS['D42'] - matrix of size [11 x 14]
       PARAMS['D43'] - matrix of size [11 x 14]
       PARAMS['D44'] - matrix of size [11 x 14]
       PARAMS['D45'] - matrix of size [11 x 14]
       PARAMS['D46'] - matrix of size [11 x 14]
       PARAMS['D47'] - matrix of size [11 x 14]
       PARAMS['D48'] - matrix of size [11 x 14]
       PARAMS['D49'] - matrix of size [11 x 14]
       PARAMS['D50'] - matrix of size [11 x 14]
       PARAMS['c02'] - column vector of length 11
       PARAMS['c03'] - column vector of length 11
       PARAMS['c04'] - column vector of length 11
       PARAMS['c05'] - column vector of length 11
       PARAMS['c06'] - column vector of length 11
       PARAMS['c07'] - column vector of length 11
       PARAMS['c08'] - column vector of length 11
       PARAMS['c09'] - column vector of length 11
       PARAMS['c10'] - column vector of length 11
       PARAMS['c11'] - column vector of length 11
       PARAMS['c12'] - column vector of length 11
       PARAMS['c13'] - column vector of length 11
       PARAMS['c14'] - column vector of length 11
       PARAMS['c15'] - column vector of length 11
       PARAMS['c16'] - column vector of length 11
       PARAMS['c17'] - column vector of length 11
       PARAMS['c18'] - column vector of length 11
       PARAMS['c19'] - column vector of length 11
       PARAMS['c20'] - column vector of length 11
       PARAMS['c21'] - column vector of length 11
       PARAMS['c22'] - column vector of length 11
       PARAMS['c23'] - column vector of length 11
       PARAMS['c24'] - column vector of length 11
       PARAMS['c25'] - column vector of length 11
       PARAMS['c26'] - column vector of length 11
       PARAMS['c27'] - column vector of length 11
       PARAMS['c28'] - column vector of length 11
       PARAMS['c29'] - column vector of length 11
       PARAMS['c30'] - column vector of length 11
       PARAMS['c31'] - column vector of length 11
       PARAMS['c32'] - column vector of length 11
       PARAMS['c33'] - column vector of length 11
       PARAMS['c34'] - column vector of length 11
       PARAMS['c35'] - column vector of length 11
       PARAMS['c36'] - column vector of length 11
       PARAMS['c37'] - column vector of length 11
       PARAMS['c38'] - column vector of length 11
       PARAMS['c39'] - column vector of length 11
       PARAMS['c40'] - column vector of length 11
       PARAMS['c41'] - column vector of length 11
       PARAMS['c42'] - column vector of length 11
       PARAMS['c43'] - column vector of length 11
       PARAMS['c44'] - column vector of length 11
       PARAMS['c45'] - column vector of length 11
       PARAMS['c46'] - column vector of length 11
       PARAMS['c47'] - column vector of length 11
       PARAMS['c48'] - column vector of length 11
       PARAMS['c49'] - column vector of length 11
       PARAMS['c50'] - column vector of length 11
       PARAMS['minusA_times_x0'] - column vector of length 11

   OUTPUT returns the values of the last iteration of the solver where
       OUTPUT['u0'] - column vector of size 700

   [OUTPUT, EXITFLAG] = mpcc_py.mpcc_solve(PARAMS) returns additionally
   the integer EXITFLAG indicating the state of the solution with 
       1 - Optimal solution has been found (subject to desired accuracy)
       2 - (only branch-and-bound) A feasible point has been identified for which the objective value is no more than codeoptions.mip.mipgap*100 per cent worse than the global optimum 
       0 - Timeout - maximum number of iterations reached
      -1 - (only branch-and-bound) Infeasible problem (problems solving the root relaxation to the desired accuracy)
      -2 - (only branch-and-bound) Out of memory - cannot fit branch and bound nodes into pre-allocated memory.
      -6 - NaN or INF occured during evaluation of functions and derivatives. Please check your initial guess.
      -7 - Method could not progress. Problem may be infeasible. Run FORCESdiagnostics on your problem to check for most common errors in the formulation.
     -10 - The convex solver could not proceed due to an internal error
    -100 - License error

   [OUTPUT, EXITFLAG, INFO] = mpcc_py.mpcc_solve(PARAMS) returns 
   additional information about the last iterate:
       INFO.it        - number of iterations that lead to this result
       INFO.it2opt    - number of convex solves
       INFO.res_eq    - max. equality constraint residual
       INFO.res_ineq  - max. inequality constraint residual
       INFO.pobj      - primal objective
       INFO.dobj      - dual objective
       INFO.dgap      - duality gap := pobj - dobj
       INFO.rdgap     - relative duality gap := |dgap / pobj|
       INFO.gradient_lag_norm - infinity norm of gradient of Lagrangian
       INFO.mu        - duality measure
       INFO.sigma     - centering parameter
       INFO.lsit_aff  - iterations of affine line search
       INFO.lsit_cc   - iterations of line search (combined direction)
       INFO.step_aff  - step size (affine direction)
       INFO.step_cc   - step size (centering direction)
       INFO.solvetime - Time needed for solve (wall clock time)

 See also COPYING

    '''
    global _lib

    # convert parameters
    params_py = mpcc_params_ctypes()
    for par in params_arg:
        try:
            #setattr(params_py, par, npct.as_ctypes(np.reshape(params_arg[par],np.size(params_arg[par]),order='A')))
            if isinstance(getattr(params_py, par), ctypes.Array):
                params_arg[par] = np.require(params_arg[par], dtype=mpcc_params_types[par], requirements='F')
                setattr(params_py, par, npct.as_ctypes(np.reshape(params_arg[par],np.size(params_arg[par]),order='F')))
            else:
                setattr(params_py, par, params_arg[par])
        except:
            raise ValueError('Parameter ' + par + ' does not have the appropriate dimensions or data type. Please use numpy arrays for parameters.')
    
    outputs_py = mpcc_outputs_ctypes()
    info_py = mpcc_info()
    if sys.version_info.major == 2:
        if sys.platform.startswith('win'):
            fp = None # if set to none, the solver prints to stdout by default - necessary because we have an access violation otherwise under windows
        else:
            #fp = open('stdout_temp.txt','w')
            fp = sys.stdout
        try:
            PyFile_AsFile.restype = ctypes.POINTER(FILE)
            exitflag = _lib.mpcc_solve( ctypes.byref(params_py), ctypes.byref(outputs_py), ctypes.byref(info_py), PyFile_AsFile(fp)  )
            #fp = open('stdout_temp.txt','r')
            #print (fp.read())
            #fp.close()
        except:
            #print 'Problem with solver'
            raise
    elif sys.version_info.major == 3:
        if sys.platform.startswith('win'):
            libc = ctypes.cdll.msvcrt
        elif sys.platform.startswith('darwin'):
            libc = ctypes.CDLL('libc.dylib')
        else:
            libc = ctypes.CDLL('libc.so.6')       # Open libc
        cfopen = getattr(libc,'fopen')        # Get its fopen
        cfopen.restype = ctypes.POINTER(FILE) # Yes, fopen gives a file pointer
        cfopen.argtypes = [ctypes.c_char_p, ctypes.c_char_p] # Yes, fopen gives a file pointer 
        fp = cfopen('stdout_temp.txt'.encode('utf-8'),'w'.encode('utf-8'))    # Use that fopen 

        try:
            if sys.platform.startswith('win'):
                exitflag = _lib.mpcc_solve( ctypes.byref(params_py), ctypes.byref(outputs_py), ctypes.byref(info_py), None )
            else:
                exitflag = _lib.mpcc_solve( ctypes.byref(params_py), ctypes.byref(outputs_py), ctypes.byref(info_py), fp )
            libc.fclose(fp)
            fptemp = open('stdout_temp.txt','r')
            print (fptemp.read())
            fptemp.close()            
        except:
            #print 'Problem with solver'
            raise

    # convert outputs
    for out in mpcc_outputs:
        mpcc_outputs[out] = npct.as_array(getattr(outputs_py,out))

    return mpcc_outputs,int(exitflag),info_py

solve = mpcc_solve


